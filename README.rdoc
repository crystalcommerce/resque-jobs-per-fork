= resque-jobs-per-fork

If you have very frequent and fast resque jobs, the overhead of forking and running your after_fork hook, might get too big. Using this resque plugin, you can have your workers perform more than one job, before terminating.
The original use case for this project was keeping connections while fetching data from a very fragile and crappy webservice.

You simply specify the number of jobs you want each fork to run using the JOBS_PER_FORK environment variable:

  QUEUE=* JOBS_PER_FORK=5 rake resque:work

If you do not specify the JOBS_PER_FORK environment variable, it will default to 1.

This will have each fork 5 jobs, before terminating.

This plugin also defines 2 new hooks that get called after the fork starts and before the fork terminates

  Resque.before_perform_jobs_per_fork do |worker|
    worker.log("Your message here")
  end

  Resque.after_perform_jobs_per_fork do |worker|
    worker.log("Your message here")
  end

Version 1.15.x works on Resque 1.15.x
Version 0.5.x works on Resque 1.11.x
Version 0.4.x works on Resque 1.10.x 
Version 0.3.x works on Resque 1.8.x 

== Note on Patches/Pull Requests

* Fork the project.
* Make your feature addition or bug fix.
* Add tests for it. This is important so I don't break it in a
  future version unintentionally.
* Commit, do not mess with rakefile, version, or history.
  (if you want to have your own version, that is fine but bump version in a commit by itself I can ignore when I pull)
* Send me a pull request. Bonus points for topic branches.

== Copyright

Copyright (c) 2010-2012 Sam Granieri (Inspired by Mick Staugaard). See LICENSE for details.
